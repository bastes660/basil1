name: Secure CI/CD with Terraform

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      run: |
        docker build -t secureapp:latest .
        docker tag secureapp:latest ${{ secrets.DOCKERHUB_USERNAME }}/secureapp:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/secureapp:latest

  terraform:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Apply
      working-directory: ./terraform
      env:
        TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_key_name: ${{ secrets.AWS_KEY_PAIR_NAME }}
      run: terraform apply -auto-approve

    - name: Get EC2 Public IP
      id: getip
      working-directory: terraform/.terraform
      run: echo "EC2_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ env.EC2_IP }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/secureapp:latest
          docker stop secureapp || true
          docker rm secureapp || true
          docker run -d -p 80:5000 --name secureapp ${{ secrets.DOCKERHUB_USERNAME }}/secureapp:latest

